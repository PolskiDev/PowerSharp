{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PowerSharp Programming Language",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#numbers"
		},
        {
            "include": "#storage"
        }
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.powersharp",
				"match": "\\b(if|elseif|else|while|for|do|return|break|def|import|include|package|namespace|end|times)\\b"
			}]
		},
		"comments": {
            "patterns": [{
                "name": "comment.block.documentation.powersharp",
                "begin": "@",
                "beginCaptures": {
                    "0": {
                        "name": "punctuation.definition.comment.begin.powersharp"
                    }
                },
                "end": "\n",
                "endCaptures": {
                    "0": {
                        "name": "punctuation.definition.comment.end.powersharp"
                    }
                },
                "patterns": [{
                    "include": "#comments"
            	}]
			}]
		},
		"strings": {
			"name": "string.quoted.double.powersharp",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.powersharp",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
            "patterns": [{
                "name": "constant.numeric.exponential.powersharp",
                "match": "([0-9]+(_?))+(\\.)([0-9]+[eE][-+]?[0-9]+)"
            }, {
                "name": "constant.numeric.float.powersharp",
                "match": "([0-9]+(_?))+(\\.)([0-9]+)"
            }, {
                "name": "constant.numeric.binary.powersharp",
                "match": "(?:0b)(?:(?:[0-1]+)(?:_?))+"
            }, {
                "name": "constant.numeric.octal.powersharp",
                "match": "(?:0o)(?:(?:[0-7]+)(?:_?))+"
            }, {
                "name": "constant.numeric.hex.powersharp",
                "match": "(?:0x)(?:(?:[0-9a-fA-F]+)(?:_?))+"
            }, {
                "name": "constant.numeric.integer.powersharp",
                "match": "(?:(?:[0-9]+)(?:[_]?))+"
            }]
        },
        "storage": {
            "name": "storage.modifier.powersharp",
            "match": "\\b(int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float32|float64|rune|byte|complex64|complex128|string|bool|void|true|false|puts|print|gets|is|isnot|not|and|or|main|nil)\\b"
        }
	},
	"scopeName": "source.pwr"
}